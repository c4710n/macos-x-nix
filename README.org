#+TITLE: macOS × Nix

+ [[https://developer.apple.com/macos/][macOS]] is good, but only the GUI-related parts.
+ [[https://nixos.org/download.html#download-nix][Nix]] and [[https://nixos.org/][NixOS]] are good, except for the GUI-related parts, such as X Window System, Wayland, etc.

Why not enjoy the best parts of them? Then, here *macOS × Nix* comes:
+ macOS provides great UI.
+ Nix acts as a configuration and package manager, which makes macOS reproducible:
  + most parts of configurations are managed by Nix.
  + all softwares are managed by Nix.

This repo will:
+ Introduce how to install Nix-related tools.
+ Manage dependencies with [[https://github.com/nmattia/niv/][niv]].
+ Manage sensitive information with [[https://github.com/AGWA/git-crypt][git-crypt]].
+ Provide sample configurations that can be used on a daily basis.

* Choose macOS version
I'm using macOS Big Sur.

#+begin_quote
Following steps aren't tested on newer version of macOS.
#+end_quote

* Install macOS
First, [[https://support.apple.com/en-us/HT201372][create a bootable installer for macOS]].

Then, use the prepared USB flash drive to install macOS as normal.

Then, enable:
+ FileVault
+ Firewall

#+begin_note
APFS(encrypted) equals to APFS with File Vault enabled.
#+end_note

* setup macOS
** setup keyboard layout
If you are using non-standard keyboard layout, such as [[https://www.kaufmann.no/roland/dvorak/][Programmer Dovrak]], etc. It's time to set it up.

*** (optional) setup modifier keys
+ =Caps Lock= -> =Control=
+ =Option= -> =Command=
+ =Command= -> =Option=

*** (options) setup shortcuts for changing input sources
#+begin_src text
System Preferences > Keyboard > Shortcuts > Input Sources > Select input source
#+end_src

** (optional) setup global proxy
In my country, the internet is audited by goverment. I would like to configure a proxy. Or, I can't install Nix.

Possible tools:
+ [[https://nssurge.com/][Surge for Mac]]
+ [[https://github.com/yichengchen/clashX][ClashX]]
+ ...

* Install Nix
** download and verify installation script
From [[https://nixos.org/download.html#nix-verify-installation][official installation]]:
#+begin_src sh
$ curl -o install-nix-2.6.0 https://releases.nixos.org/nix/nix-2.6.0/install
$ curl -o install-nix-2.6.0.asc https://releases.nixos.org/nix/nix-2.6.0/install.asc
$ gpg2 --keyserver hkps://keyserver.ubuntu.com --recv-keys B541D55301270E0BCF15CA5D8170B4726D7198DE
$ gpg2 --verify ./install-nix-2.6.0.asc
#+end_src

If everything is fine, then install it via the recommended [[https://nixos.org/manual/nix/stable/installation/multi-user.html][multi-user installation]], and with macOS limited options:
#+begin_src sh
$ sh ./install-nix-2.6.0 --daemon --darwin-use-unencrypted-nix-store-volume
#+end_src

#+begin_quote
The option =--darwin-use-unencrypted-nix-store-volume= is no longer needed and will be removed in the future.
#+end_quote

** verify installation
#+begin_src sh
$ nix-env --version
#+end_src

* Install nix-darwin
[[https://github.com/LnL7/nix-darwin][nix-darwin]] provides =/etc/nixos/configuration.nix=-like configuration for macOS.

It allows us configure dock, finder, launchd, software update policy with Nix expressions, etc.

Just install it according to official docs.

** (optional) setup shell environment
=/etc/static/bashrc= which is the bash profile setup by *nix-darwin* will read =/etc/bash.local=.

* Install Homebrew
Some software, especially the GUI applications are not provided by Nix. [[https://brew.sh][Homebrew]] is a good addition for the missing parts.

Just install it according to official docs with default options. *nix-darwin* will take care of the rest.

#+begin_quote
Think of *Homebrew* as an additional source of software for *nix*. =brew= will never be called  from CLI directly.
#+end_quote

* Take a break
Now, the basic setup has been completed.

* Change default shell
Add =/run/current-system/sw/bin/bash= to =/etc/shells=, then run:
#+begin_src sh
$ chsh -s /run/current-system/sw/bin/bash
#+end_src

* Use sample configurations
Link config to =~/.nixpkgs= with following command:
#+begin_src sh
$ ./bootstrap.sh
#+end_src

Rebuild system with =darwin-rebuild=:
#+begin_src sh
$ darwin-rebuild switch -I darwin-config=$HOME/.nixpkgs/configuration.nix
#+end_src

After that, you can rebuild system as normal:
#+begin_src sh
$ darwin-rebuild switch
#+end_src

* Fine-tune the system manually
#+begin_quote
Not everything can be done automatically.
#+end_quote

** disable spotlight
#+begin_src sh
$ sudo ,macos-disable-spotlight
#+end_src

** adjust Terminal
+ =View > Hide Tab Bar= - Prevent Terminal.app from displaying a tab bar when there is only one tab open.
+ =Preferences > Profiles > Keyboard > Use Options as Meta key= - Help me to input faster.

* Restore Backups
Install =osxfuse= before mounting backups:
#+begin_src sh
$ brew install --cask macfuse
#+end_src

Reboot to active macfuse.

Restore backups:
#+begin_src sh
$ export BORG_REPO=/path/to/borg-repo
$ borg mount ::2021-04-21T11:34:37 /path/to/mount/point
$ cp -rp <...> <...>
#+end_src

* More
+ [[https://nixos.org/manual/nixpkgs/stable/][Nixpkgs Manual]]
+ [[https://nix.dev/][nix.dev]]

* Last
Have fun!
