* Setup for NixOps and NixOps-like tools
Just as the project name implies, we are running Nix on macOS whose architecture name is =x86_64-darwin=. Because the incompatibility of architecture, I can't build software for my =x86_64-linux= server without any effort.

In order to achieve it, I setup a build machine with [[./modules/box-x86_64/][box-x86_64]] module.

And, I need to clearly state the architecture of remote machine in the configuration of NixOps or NixOps-like tools, such as [[https://github.com/DBCDK/morph][morph]], etc. For example:

#+begin_src nix
{
  webserver = { config, pkgs, lib, ... }: {
    deployment.targetHost = "...";
    nixpkgs.localSystem.system = "x86_64-linux";
    # ...
  };
}
#+end_src

Then, use NixOps or NixOps-like tools as normal.

That's it.

* Manage virtual machines
As you can see in above action, I am using a build machine.

But, how do I manage the virtual machines? I still use Nix.

#+begin_quote
Suppose that the IP of virtual machine is =192.168.xxx.xxx=.
#+end_quote

Copy SSH public key to virtual machine for bootstraping:
#+begin_src sh
$ ssh-copy-id -i secrets/nixos-vm-ssh-key root@192.168.xxx.xxx
#+end_src

Edit =/etc/hosts= for mapping IP to hostname:
#+begin_src sh
# ...
192.168.xxx.xxx    box-x86_64
#+end_src

Apply configurations:
#+begin_src sh
$ cd modules/box-x86_64/morph
$ nix-shell
$ vm-deploy
#+end_src

That's it.
