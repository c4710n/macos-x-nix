#!/usr/bin/env bash

echo 'Guessing repo config...'

remote=$(git remote -v | awk '/\(push\)$/ {print $2}')

log_error() {
    echo -e "\e[31m$*\e[0m"
}

if [[ $remote == *github.com* ]]; then
    type="GitHub"
    name="c4710n"
    email="c4710n@users.noreply.github.com"
    signingkey="CA64A1BE51CB6DA2"
elif [[ $remote == *sr.ht* ]]; then
    name="c4710n"
    email="c4710n@users.noreply.sr.ht"
elif [[ $remote == *gitlab.com* ]]; then
    name="c4710n"
    email="c4710n@users.noreply.gitlab.com"
elif [[ $remote == *zxunity* ]]; then
    name="douzk"
    email="douzk@zxunity.com"
elif [[ $remote == *local* ]]; then
    # for localhost private repo without pushing to remote
    name="historian"
    email="historian@local"
else
    log_error "Failed to guess."
    exit 1
fi

if [[ $type == "GitHub" ]]; then
    echo "+ [forge] configure github.user as $name"
    git config github.user "$name"
fi

echo "+ [git] configure user.name as $name"
git config user.name "$name"

echo "+ [git] configure user.email as $email"
git config user.email "$email"

if [[ -n $signingkey ]]; then
    echo "+ [git] configure user.signingkey as $signingkey"
    git config user.signingkey "$signingkey"

    echo "+ [git] configure commit.gpgsign as true"
    git config commit.gpgsign true

    echo ""
    echo ""
    echo "[The info of GPG key]"
    gpg --list-secret-keys --keyid-format=long $signingkey
fi
